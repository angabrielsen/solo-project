var _user$project$Pts_expiry_Data$allSelected = function (model) {
	return _elm_lang$core$Native_Utils.eq(
		_elm_lang$core$Set$size(model.selected),
		_elm_lang$core$List$length(model.data));
};
var _user$project$Pts_expiry_Data$toggleComp = F2(
	function (company, item) {
		return _elm_lang$core$Native_Utils.eq(item.company, company) ? _elm_lang$core$Native_Utils.update(
			item,
			{
				selectedComp: _elm_lang$core$Basics$not(item.selectedComp)
			}) : item;
	});
var _user$project$Pts_expiry_Data$toggle = F2(
	function (x, set) {
		return A2(_elm_lang$core$Set$member, x, set) ? A2(_elm_lang$core$Set$remove, x, set) : A2(_elm_lang$core$Set$insert, x, set);
	});
var _user$project$Pts_expiry_Data$afterStartDate = F3(
	function (startDate, endDate, records) {
		return A2(
			_elm_lang$core$List$filter,
			function (record) {
				return (_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$Date$toTime(record.expiry_date),
					_elm_lang$core$Date$toTime(
						_user$project$Mock_data$convertToDate(startDate))) > 0) && (_elm_lang$core$Native_Utils.cmp(
					_elm_lang$core$Date$toTime(record.expiry_date),
					_elm_lang$core$Date$toTime(
						_user$project$Mock_data$convertToDate(endDate))) < 0);
			},
			records);
	});
var _user$project$Pts_expiry_Data$resultsKey = function (_) {
	return _.user_transaction_id;
};
var _user$project$Pts_expiry_Data$Model = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return function (m) {
													return function (n) {
														return function (o) {
															return function (p) {
																return function (q) {
																	return function (r) {
																		return function (s) {
																			return {mdl: a, selected: b, selectedTab: c, selectedActionTab: d, data: e, dataFiltered: f, comp: g, companies: h, tableState: i, query: j, dateStart: k, dateEnd: l, dateExtend: m, extendDays: n, extendWeeks: o, extendMonths: p, extendYears: q, currentTime: r, running: s};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$Pts_expiry_Data$SetTime = function (a) {
	return {ctor: 'SetTime', _0: a};
};
var _user$project$Pts_expiry_Data$getCurrentTime = A3(
	_elm_lang$core$Task$perform,
	_elm_lang$core$Basics$always(
		_user$project$Pts_expiry_Data$SetTime(0)),
	_user$project$Pts_expiry_Data$SetTime,
	_elm_lang$core$Time$now);
var _user$project$Pts_expiry_Data$UpResults = function (a) {
	return {ctor: 'UpResults', _0: a};
};
var _user$project$Pts_expiry_Data$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'SelectTab':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{selectedTab: _p0._0}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			case 'SelectActionTab':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{selectedActionTab: _p0._0}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			case 'Mdl':
				return A2(_debois$elm_mdl$Material$update, _p0._0, model);
			case 'Toggle':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							selected: A2(_user$project$Pts_expiry_Data$toggle, _p0._0, model.selected)
						}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			case 'ToggleAll':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							selected: _user$project$Pts_expiry_Data$allSelected(model) ? _elm_lang$core$Set$empty : _elm_lang$core$Set$fromList(
								A2(_elm_lang$core$List$map, _user$project$Pts_expiry_Data$resultsKey, model.data))
						}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			case 'ToggleComp':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							companies: A2(
								_elm_lang$core$List$map,
								_user$project$Pts_expiry_Data$toggleComp(_p0._0),
								model.companies)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SetQuery':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{query: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SetTableState':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{tableState: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpDateStart':
				return A3(
					_ccapndave$elm_update_extra$Update_Extra$andThen,
					_user$project$Pts_expiry_Data$update,
					_user$project$Pts_expiry_Data$UpResults(model.data),
					A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{dateStart: _p0._0}),
						_elm_lang$core$Native_List.fromArray(
							[])));
			case 'UpDateEnd':
				return A3(
					_ccapndave$elm_update_extra$Update_Extra$andThen,
					_user$project$Pts_expiry_Data$update,
					_user$project$Pts_expiry_Data$UpResults(model.data),
					A2(
						_elm_lang$core$Platform_Cmd_ops['!'],
						_elm_lang$core$Native_Utils.update(
							model,
							{dateEnd: _p0._0}),
						_elm_lang$core$Native_List.fromArray(
							[])));
			case 'UpDateExtend':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{dateExtend: _p0._0}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			case 'UpExtendDays':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{extendDays: _p0._0}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			case 'UpExtendWeeks':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{extendWeeks: _p0._0}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			case 'UpExtendMonths':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{extendMonths: _p0._0}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			case 'UpExtendYears':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{extendYears: _p0._0}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			case 'UpResults':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							dataFiltered: A3(_user$project$Pts_expiry_Data$afterStartDate, model.dateStart, model.dateEnd, model.data)
						}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			default:
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{currentTime: _p0._0}),
					_elm_lang$core$Native_List.fromArray(
						[]));
		}
	});
var _user$project$Pts_expiry_Data$UpExtendYears = function (a) {
	return {ctor: 'UpExtendYears', _0: a};
};
var _user$project$Pts_expiry_Data$UpExtendMonths = function (a) {
	return {ctor: 'UpExtendMonths', _0: a};
};
var _user$project$Pts_expiry_Data$UpExtendWeeks = function (a) {
	return {ctor: 'UpExtendWeeks', _0: a};
};
var _user$project$Pts_expiry_Data$UpExtendDays = function (a) {
	return {ctor: 'UpExtendDays', _0: a};
};
var _user$project$Pts_expiry_Data$UpDateExtend = function (a) {
	return {ctor: 'UpDateExtend', _0: a};
};
var _user$project$Pts_expiry_Data$UpDateEnd = function (a) {
	return {ctor: 'UpDateEnd', _0: a};
};
var _user$project$Pts_expiry_Data$UpDateStart = function (a) {
	return {ctor: 'UpDateStart', _0: a};
};
var _user$project$Pts_expiry_Data$SetTableState = function (a) {
	return {ctor: 'SetTableState', _0: a};
};
var _user$project$Pts_expiry_Data$SetQuery = function (a) {
	return {ctor: 'SetQuery', _0: a};
};
var _user$project$Pts_expiry_Data$ToggleComp = function (a) {
	return {ctor: 'ToggleComp', _0: a};
};
var _user$project$Pts_expiry_Data$ToggleAll = {ctor: 'ToggleAll'};
var _user$project$Pts_expiry_Data$Toggle = function (a) {
	return {ctor: 'Toggle', _0: a};
};
var _user$project$Pts_expiry_Data$SelectActionTab = function (a) {
	return {ctor: 'SelectActionTab', _0: a};
};
var _user$project$Pts_expiry_Data$SelectTab = function (a) {
	return {ctor: 'SelectTab', _0: a};
};
var _user$project$Pts_expiry_Data$Mdl = function (a) {
	return {ctor: 'Mdl', _0: a};
};
