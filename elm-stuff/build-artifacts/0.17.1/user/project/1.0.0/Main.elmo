var _user$project$Main$viewActions = function (model) {
	return A2(
		_debois$elm_mdl$Material_Options$div,
		_elm_lang$core$Native_List.fromArray(
			[
				A2(_debois$elm_mdl$Material_Options$css, 'position', 'fixed'),
				A2(_debois$elm_mdl$Material_Options$css, 'bottom', '0'),
				A2(_debois$elm_mdl$Material_Options$css, 'margin', '0px'),
				A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
				_debois$elm_mdl$Material_Color$background(
				A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Teal, _debois$elm_mdl$Material_Color$S100))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some actions!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some actions!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some actions!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some actions!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some actions!')
					]))
			]));
};
var _user$project$Main$viewResult = function (model) {
	return A2(
		_debois$elm_mdl$Material_Options$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_debois$elm_mdl$Material_Color$background(
						A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Teal, _debois$elm_mdl$Material_Color$S50)),
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Even Result')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Odd Result')
					]))
			]));
};
var _user$project$Main$viewResults = function (model) {
	return A2(
		_debois$elm_mdl$Material_Options$div,
		_elm_lang$core$Native_List.fromArray(
			[
				A2(_debois$elm_mdl$Material_Options$css, 'padding-bottom', '150px')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Main$viewResult(model),
				_user$project$Main$viewResult(model),
				_user$project$Main$viewResult(model),
				_user$project$Main$viewResult(model),
				_user$project$Main$viewResult(model),
				_user$project$Main$viewResult(model),
				_user$project$Main$viewResult(model),
				_user$project$Main$viewResult(model),
				_user$project$Main$viewResult(model),
				_user$project$Main$viewResult(model),
				_user$project$Main$viewResult(model),
				_elm_lang$html$Html$text('END')
			]));
};
var _user$project$Main$filterProgram = function (model) {
	return A2(
		_debois$elm_mdl$Material_Options$div,
		_elm_lang$core$Native_List.fromArray(
			[
				A2(_debois$elm_mdl$Material_Options$css, 'height', '100px'),
				A2(_debois$elm_mdl$Material_Options$css, 'width', '150px'),
				A2(_debois$elm_mdl$Material_Options$css, 'overflow-y', 'scroll'),
				A2(_debois$elm_mdl$Material_Options$css, 'color', '#000')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$ul,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$style(
						_elm_lang$core$Native_List.fromArray(
							[
								{ctor: '_Tuple2', _0: 'list-style-type', _1: 'none'},
								{ctor: '_Tuple2', _0: 'background-color', _1: '#FFF'},
								{ctor: '_Tuple2', _0: 'padding-left', _1: '10px'},
								{ctor: '_Tuple2', _0: 'margin', _1: '0px'}
							]))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$li,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Select All')
							])),
						A2(
						_elm_lang$html$Html$li,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Redemption')
							])),
						A2(
						_elm_lang$html$Html$li,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Achievement')
							])),
						A2(
						_elm_lang$html$Html$li,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Great Work')
							])),
						A2(
						_elm_lang$html$Html$li,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Other Fun Stuff')
							]))
					]))
			]));
};
var _user$project$Main$filterCompany = function (model) {
	return A2(
		_debois$elm_mdl$Material_Options$div,
		_elm_lang$core$Native_List.fromArray(
			[
				A2(_debois$elm_mdl$Material_Options$css, 'height', '100px'),
				A2(_debois$elm_mdl$Material_Options$css, 'width', '150px'),
				A2(_debois$elm_mdl$Material_Options$css, 'overflow-y', 'scroll'),
				A2(_debois$elm_mdl$Material_Options$css, 'color', '#000')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Select Company:'),
				A2(
				_elm_lang$html$Html$ul,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$style(
						_elm_lang$core$Native_List.fromArray(
							[
								{ctor: '_Tuple2', _0: 'list-style-type', _1: 'none'},
								{ctor: '_Tuple2', _0: 'background-color', _1: '#FFF'},
								{ctor: '_Tuple2', _0: 'padding-left', _1: '10px'},
								{ctor: '_Tuple2', _0: 'margin', _1: '0px'}
							]))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$li,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Select All')
							])),
						A2(
						_elm_lang$html$Html$li,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Bank of America')
							])),
						A2(
						_elm_lang$html$Html$li,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('O.C. Tanner')
							])),
						A2(
						_elm_lang$html$Html$li,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('T.D. Bank')
							])),
						A2(
						_elm_lang$html$Html$li,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('US Bank')
							]))
					]))
			]));
};
var _user$project$Main$viewFilters = function (model) {
	return A2(
		_debois$elm_mdl$Material_Grid$grid,
		_elm_lang$core$Native_List.fromArray(
			[
				_debois$elm_mdl$Material_Color$background(
				A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Teal, _debois$elm_mdl$Material_Color$S100)),
				A2(_debois$elm_mdl$Material_Options$css, 'width', '100%')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 6)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_debois$elm_mdl$Material_Grid$grid,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_debois$elm_mdl$Material_Grid$cell,
								_elm_lang$core$Native_List.fromArray(
									[
										A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 6)
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Choose company:'),
										_user$project$Main$filterCompany(model)
									])),
								A2(
								_debois$elm_mdl$Material_Grid$cell,
								_elm_lang$core$Native_List.fromArray(
									[
										A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 6)
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Select Program:'),
										_user$project$Main$filterProgram(model)
									]))
							]))
					])),
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 6)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Right')
					]))
			]));
};
var _user$project$Main$viewDash = function (model) {
	return A2(
		_debois$elm_mdl$Material_Grid$grid,
		_elm_lang$core$Native_List.fromArray(
			[
				A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
				A2(_debois$elm_mdl$Material_Options$css, 'padding', '0px')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 12),
						A2(_debois$elm_mdl$Material_Options$css, 'margin', '0px'),
						A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
						A2(_debois$elm_mdl$Material_Options$css, 'text-align', 'center'),
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Results • All')
					])),
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 12),
						A2(_debois$elm_mdl$Material_Options$css, 'margin', '0px'),
						A2(_debois$elm_mdl$Material_Options$css, 'width', '100%')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$viewResults(model)
					])),
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 12),
						A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
						A2(_debois$elm_mdl$Material_Options$css, 'margin', '0px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$viewActions(model)
					]))
			]));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'Mdl') {
			return A2(_debois$elm_mdl$Material$update, _p0._0, model);
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{selectedTab: _p0._0}),
				_elm_lang$core$Native_List.fromArray(
					[]));
		}
	});
var _user$project$Main$model = {mdl: _debois$elm_mdl$Material$model, selectedTab: 0};
var _user$project$Main$Model = F2(
	function (a, b) {
		return {mdl: a, selectedTab: b};
	});
var _user$project$Main$SelectTab = function (a) {
	return {ctor: 'SelectTab', _0: a};
};
var _user$project$Main$Mdl = function (a) {
	return {ctor: 'Mdl', _0: a};
};
var _user$project$Main$view = function (model) {
	return A3(
		_debois$elm_mdl$Material_Scheme$topWithScheme,
		_debois$elm_mdl$Material_Color$Teal,
		_debois$elm_mdl$Material_Color$LightGreen,
		A4(
			_debois$elm_mdl$Material_Layout$render,
			_user$project$Main$Mdl,
			model.mdl,
			_elm_lang$core$Native_List.fromArray(
				[
					_debois$elm_mdl$Material_Layout$fixedHeader,
					_debois$elm_mdl$Material_Layout$waterfall(true)
				]),
			{
				header: _elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$h1,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$style(
								_elm_lang$core$Native_List.fromArray(
									[
										{ctor: '_Tuple2', _0: 'margin', _1: '10px'}
									]))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Points Expiration')
							])),
						_user$project$Main$viewFilters(model)
					]),
				drawer: _elm_lang$core$Native_List.fromArray(
					[]),
				tabs: {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_List.fromArray(
						[]),
					_1: _elm_lang$core$Native_List.fromArray(
						[])
				},
				main: _elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$viewDash(model)
					])
			}));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: {ctor: '_Tuple2', _0: _user$project$Main$model, _1: _elm_lang$core$Platform_Cmd$none},
			view: _user$project$Main$view,
			subscriptions: _elm_lang$core$Basics$always(_elm_lang$core$Platform_Sub$none),
			update: _user$project$Main$update
		})
};
