var _user$project$Main$viewCard = function (model) {
	return A2(
		_debois$elm_mdl$Material_Grid$grid,
		_elm_lang$core$Native_List.fromArray(
			[
				A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
				A2(_debois$elm_mdl$Material_Options$css, 'padding', '10px')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 4),
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '10px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_debois$elm_mdl$Material_Card$view,
						_elm_lang$core$Native_List.fromArray(
							[
								_debois$elm_mdl$Material_Elevation$e4,
								A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
								A2(_debois$elm_mdl$Material_Options$css, 'height', '100%'),
								A2(_debois$elm_mdl$Material_Options$css, 'color', 'white'),
								_debois$elm_mdl$Material_Color$background(
								A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Pink, _debois$elm_mdl$Material_Color$S500))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_debois$elm_mdl$Material_Card$title,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Titleholder'),
										A2(
										_debois$elm_mdl$Material_Card$subhead,
										_elm_lang$core$Native_List.fromArray(
											[]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('Subheadholder')
											]))
									])),
								A2(
								_debois$elm_mdl$Material_Card$media,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_debois$elm_mdl$Material_Options$img,
										_elm_lang$core$Native_List.fromArray(
											[
												A2(_debois$elm_mdl$Material_Options$css, 'max-width', '100%')
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$src('assets/images/ash.jpg')
											]))
									])),
								A2(
								_debois$elm_mdl$Material_Card$text,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Textholder')
									])),
								A2(
								_debois$elm_mdl$Material_Card$actions,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Actionholder')
									]))
							]))
					])),
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 4),
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '10px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_debois$elm_mdl$Material_Card$view,
						_elm_lang$core$Native_List.fromArray(
							[
								_debois$elm_mdl$Material_Elevation$e4,
								A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
								A2(_debois$elm_mdl$Material_Options$css, 'height', '100%'),
								A2(_debois$elm_mdl$Material_Options$css, 'color', 'white'),
								_debois$elm_mdl$Material_Color$background(
								A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Pink, _debois$elm_mdl$Material_Color$S500))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_debois$elm_mdl$Material_Card$title,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Titleholder'),
										A2(
										_debois$elm_mdl$Material_Card$subhead,
										_elm_lang$core$Native_List.fromArray(
											[]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('Subheadholder')
											]))
									])),
								A2(
								_debois$elm_mdl$Material_Card$media,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_debois$elm_mdl$Material_Options$img,
										_elm_lang$core$Native_List.fromArray(
											[
												A2(_debois$elm_mdl$Material_Options$css, 'max-width', '100%')
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$src('assets/images/ash.jpg')
											]))
									])),
								A2(
								_debois$elm_mdl$Material_Card$text,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Textholder')
									])),
								A2(
								_debois$elm_mdl$Material_Card$actions,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Actionholder')
									]))
							]))
					])),
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 4),
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '10px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_debois$elm_mdl$Material_Card$view,
						_elm_lang$core$Native_List.fromArray(
							[
								_debois$elm_mdl$Material_Elevation$e4,
								A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
								A2(_debois$elm_mdl$Material_Options$css, 'height', '100%'),
								A2(_debois$elm_mdl$Material_Options$css, 'color', 'white'),
								_debois$elm_mdl$Material_Color$background(
								A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Pink, _debois$elm_mdl$Material_Color$S500))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_debois$elm_mdl$Material_Card$title,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Titleholder'),
										A2(
										_debois$elm_mdl$Material_Card$subhead,
										_elm_lang$core$Native_List.fromArray(
											[]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('Subheadholder')
											]))
									])),
								A2(
								_debois$elm_mdl$Material_Card$media,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_debois$elm_mdl$Material_Options$img,
										_elm_lang$core$Native_List.fromArray(
											[
												A2(_debois$elm_mdl$Material_Options$css, 'max-width', '100%')
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$src('assets/images/ash.jpg')
											]))
									])),
								A2(
								_debois$elm_mdl$Material_Card$text,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Textholder')
									])),
								A2(
								_debois$elm_mdl$Material_Card$actions,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Actionholder')
									]))
							]))
					])),
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 12),
						_debois$elm_mdl$Material_Color$background(
						A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$DeepPurple, _debois$elm_mdl$Material_Color$S50)),
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '10px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Vice franzen echo park seitan, yuccie banjo prism umami cornhole actually cred PBR&B. Blue bottle etsy organic, food truck tote bag typewriter hot chicken. Coloring book fanny pack leggings bitters artisan. Farm-to-table keffiyeh trust fund, hot chicken semiotics gochujang keytar beard. Etsy tattooed polaroid jianbing 8-bit, irony live-edge snackwave godard kogi XOXO la croix af mixtape schlitz. Dreamcatcher mlkshk glossier affogato bushwick, hashtag vegan next level shabby chic 8-bit cardigan organic schlitz. Pinterest mixtape waistcoat paleo mumblecore gentrify. Vice franzen echo park seitan, yuccie banjo prism umami cornhole actually cred PBR&B. Blue bottle etsy organic, food truck tote bag typewriter hot chicken. Coloring book fanny pack leggings bitters artisan. Farm-to-table keffiyeh trust fund, hot chicken semiotics gochujang keytar beard. Etsy tattooed polaroid jianbing 8-bit, irony live-edge snackwave godard kogi XOXO la croix af mixtape schlitz. Dreamcatcher mlkshk glossier affogato bushwick, hashtag vegan next level shabby chic 8-bit cardigan organic schlitz. Pinterest mixtape waistcoat paleo mumblecore gentrify.')
					]))
			]));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Increase':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{count: model.count + 1}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Reset':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{count: 0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Mdl':
				return A2(_debois$elm_mdl$Material$update, _p0._0, model);
			default:
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{selectedTab: _p0._0}),
					_elm_lang$core$Native_List.fromArray(
						[]));
		}
	});
var _user$project$Main$model = {count: 0, mdl: _debois$elm_mdl$Material$model, selectedTab: 0};
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {count: a, mdl: b, selectedTab: c};
	});
var _user$project$Main$SelectTab = function (a) {
	return {ctor: 'SelectTab', _0: a};
};
var _user$project$Main$Mdl = function (a) {
	return {ctor: 'Mdl', _0: a};
};
var _user$project$Main$view = function (model) {
	return A3(
		_debois$elm_mdl$Material_Scheme$topWithScheme,
		_debois$elm_mdl$Material_Color$Teal,
		_debois$elm_mdl$Material_Color$LightGreen,
		A4(
			_debois$elm_mdl$Material_Layout$render,
			_user$project$Main$Mdl,
			model.mdl,
			_elm_lang$core$Native_List.fromArray(
				[
					_debois$elm_mdl$Material_Layout$fixedHeader,
					_debois$elm_mdl$Material_Layout$selectedTab(model.selectedTab),
					_debois$elm_mdl$Material_Layout$onSelectTab(_user$project$Main$SelectTab)
				]),
			{
				header: _elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$h1,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$style(
								_elm_lang$core$Native_List.fromArray(
									[
										{ctor: '_Tuple2', _0: 'padding', _1: '2rem'}
									]))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Budgeting Tool')
							]))
					]),
				drawer: _elm_lang$core$Native_List.fromArray(
					[]),
				tabs: {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text('Events'),
							_elm_lang$html$Html$text('Challenges')
						]),
					_1: _elm_lang$core$Native_List.fromArray(
						[
							_debois$elm_mdl$Material_Color$background(
							A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Teal, _debois$elm_mdl$Material_Color$S400))
						])
				},
				main: _elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$viewCard(model)
					])
			}));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: {ctor: '_Tuple2', _0: _user$project$Main$model, _1: _elm_lang$core$Platform_Cmd$none},
			view: _user$project$Main$view,
			subscriptions: _elm_lang$core$Basics$always(_elm_lang$core$Platform_Sub$none),
			update: _user$project$Main$update
		})
};
var _user$project$Main$Reset = {ctor: 'Reset'};
var _user$project$Main$Increase = {ctor: 'Increase'};
