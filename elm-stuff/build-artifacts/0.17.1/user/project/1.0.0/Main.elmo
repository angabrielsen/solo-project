var _user$project$Main$viewActions = function (model) {
	return A2(
		_debois$elm_mdl$Material_Options$div,
		_elm_lang$core$Native_List.fromArray(
			[
				A2(_debois$elm_mdl$Material_Options$css, 'position', 'fixed'),
				A2(_debois$elm_mdl$Material_Options$css, 'bottom', '0'),
				A2(_debois$elm_mdl$Material_Options$css, 'margin', '0px'),
				A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
				_debois$elm_mdl$Material_Color$background(
				A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Teal, _debois$elm_mdl$Material_Color$S100))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some actions!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some actions!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some actions!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some actions!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some actions!')
					]))
			]));
};
var _user$project$Main$viewResults = function (model) {
	return A2(
		_debois$elm_mdl$Material_Options$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_debois$elm_mdl$Material_Color$background(
						A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Teal, _debois$elm_mdl$Material_Color$S50)),
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Even Result')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Odd Result')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_debois$elm_mdl$Material_Color$background(
						A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Teal, _debois$elm_mdl$Material_Color$S50)),
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Even Result')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Odd Result')
					]))
			]));
};
var _user$project$Main$viewFilters = function (model) {
	return A2(
		_debois$elm_mdl$Material_Options$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some filters!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some filters!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some filters!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some filters!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some filters!')
					])),
				A2(
				_debois$elm_mdl$Material_Options$div,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Hey, look some filters!')
					]))
			]));
};
var _user$project$Main$viewDash = function (model) {
	return A2(
		_debois$elm_mdl$Material_Grid$grid,
		_elm_lang$core$Native_List.fromArray(
			[
				A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
				A2(_debois$elm_mdl$Material_Options$css, 'padding', '0px')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 12),
						A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
						A2(_debois$elm_mdl$Material_Options$css, 'margin', '0px'),
						A2(_debois$elm_mdl$Material_Options$css, 'position', 'fixed'),
						A2(_debois$elm_mdl$Material_Options$css, 'top', '0px'),
						_debois$elm_mdl$Material_Color$background(
						A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Teal, _debois$elm_mdl$Material_Color$S100))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$viewFilters(model)
					])),
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 12),
						A2(_debois$elm_mdl$Material_Options$css, 'text-align', 'center'),
						A2(_debois$elm_mdl$Material_Options$css, 'padding', '5px'),
						A2(_debois$elm_mdl$Material_Options$css, 'margin-top', '90px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Results â€¢ All')
					])),
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 12),
						A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
						A2(_debois$elm_mdl$Material_Options$css, 'margin', '0px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$viewResults(model),
						_user$project$Main$viewResults(model),
						_user$project$Main$viewResults(model),
						_user$project$Main$viewResults(model),
						_user$project$Main$viewResults(model),
						_user$project$Main$viewResults(model),
						_user$project$Main$viewResults(model),
						_user$project$Main$viewResults(model)
					])),
				A2(
				_debois$elm_mdl$Material_Grid$cell,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 12),
						A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
						A2(_debois$elm_mdl$Material_Options$css, 'margin', '0px')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$viewActions(model)
					]))
			]));
};
var _user$project$Main$viewBody = function (model) {
	var _p0 = model.selectedTab;
	if (_p0 === 0) {
		return _user$project$Main$viewDash(model);
	} else {
		return _elm_lang$html$Html$text('404');
	}
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		if (_p1.ctor === 'Mdl') {
			return A2(_debois$elm_mdl$Material$update, _p1._0, model);
		} else {
			return A2(
				_elm_lang$core$Platform_Cmd_ops['!'],
				_elm_lang$core$Native_Utils.update(
					model,
					{selectedTab: _p1._0}),
				_elm_lang$core$Native_List.fromArray(
					[]));
		}
	});
var _user$project$Main$model = {mdl: _debois$elm_mdl$Material$model, selectedTab: 0};
var _user$project$Main$Model = F2(
	function (a, b) {
		return {mdl: a, selectedTab: b};
	});
var _user$project$Main$SelectTab = function (a) {
	return {ctor: 'SelectTab', _0: a};
};
var _user$project$Main$Mdl = function (a) {
	return {ctor: 'Mdl', _0: a};
};
var _user$project$Main$view = function (model) {
	return A3(
		_debois$elm_mdl$Material_Scheme$topWithScheme,
		_debois$elm_mdl$Material_Color$Teal,
		_debois$elm_mdl$Material_Color$LightGreen,
		A4(
			_debois$elm_mdl$Material_Layout$render,
			_user$project$Main$Mdl,
			model.mdl,
			_elm_lang$core$Native_List.fromArray(
				[
					_debois$elm_mdl$Material_Layout$fixedHeader,
					_debois$elm_mdl$Material_Layout$onSelectTab(_user$project$Main$SelectTab)
				]),
			{
				header: _elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$h1,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$style(
								_elm_lang$core$Native_List.fromArray(
									[
										{ctor: '_Tuple2', _0: 'margin', _1: '10px'}
									]))
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Points Expiration')
							]))
					]),
				drawer: _elm_lang$core$Native_List.fromArray(
					[]),
				tabs: {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_List.fromArray(
						[]),
					_1: _elm_lang$core$Native_List.fromArray(
						[])
				},
				main: _elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$viewBody(model)
					])
			}));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: {ctor: '_Tuple2', _0: _user$project$Main$model, _1: _elm_lang$core$Platform_Cmd$none},
			view: _user$project$Main$view,
			subscriptions: _elm_lang$core$Basics$always(_elm_lang$core$Platform_Sub$none),
			update: _user$project$Main$update
		})
};
